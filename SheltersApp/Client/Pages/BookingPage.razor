@page "/Booking"
@inject NavigationManager NavigationManager
@inject HttpClient Http
@using SheltersApp.Shared.Model;

<h3>Opret Booking</h3>

<EditForm Model="newBooking" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <!-- Tilføjer Shelters dropdown menu -->
    <div class="form-group">
        <label for="shelters" class="bold-label">Vælg Shelter:</label>
        <select @bind="SelectedShelterName" @bind:event="onchange" class="form-control">
            @foreach (var shelter in shelters)
            {
                <option value="@shelter.Navn">@shelter.Navn</option>
            }
        </select>
    </div>
    <!-- Vis lang_beskr for det valgte shelter her -->
    <div class="form-group">
        <label for="shelterDescription" class="bold-label">Beskrivelse:</label>
        <p id="shelterDescription" class="form-control-plaintext">@selectedShelterDescription</p>
    </div>
    <!-- Vis Booking ID her -->
    <div class="form-group">
        <label for="bookingID" class="bold-label">Booking ID:</label>
        <p id="bookingID" class="form-control-plaintext">@newBooking.BookingID</p>
    </div>
    <div class="container">
        <div class="row">
            <!-- Navn og Telefonnr kolonne -->
            <div class="col-md-6">
                <div class="form-group">
                    <label for="name" class="bold-label">Navn:</label>
                    <InputText id="name" class="form-control" @bind-Value="newBooking.Name" />
                </div>
                <div class="form-group">
                    <label for="telefonnr" class="bold-label">Telefonnr:</label>
                    <InputText id="telefonnr" class="form-control" @bind-Value="newBooking.Telefonnr" />
                </div>
            </div>

            <!-- Dato kolonne -->
            <div class="col-md-6">
                <div class="form-group">
                    <label for="startDate" class="bold-label">Start Dato:</label>
                    <input type="date" id="startDate" @bind="tempStartDate" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="endDate" class="bold-label">Slut Dato:</label>
                    <input type="date" id="endDate" @bind="tempEndDate" class="form-control" />
                </div>
            </div>
        </div>
    </div>

    <!-- Opret Booking knap -->
    <button type="submit" class="btn btn-primary add-booking-button">Opret Booking</button>
</EditForm>

@code {
    private List<Shelter> shelters = new List<Shelter>();
    private Booking newBooking = new Booking();
    private string selectedShelterDescription;

    private DateTime tempStartDate = DateTime.Today; // Midlertidig property til at håndtere dato input
    private DateTime tempEndDate = DateTime.Today.AddDays(1); // Midlertidig property til at håndtere dato input

    // Property til at binde det valgte shelter navn og opdatere beskrivelsen
    private string SelectedShelterName
    {
        get => newBooking.ShelterName;
        set
        {
            if (newBooking.ShelterName != value)
            {
                newBooking.ShelterName = value;
                OnShelterSelected(value);
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        shelters = await Http.GetFromJsonAsync<List<Shelter>>("api/shelterSIU");
        if (shelters.Any())
        {
            var firstShelter = shelters.First();
            SelectedShelterName = firstShelter.Navn;
            selectedShelterDescription = firstShelter.Lang_beskr;
            GenerateRandomBookingId();
        }
    }

    private void GenerateRandomBookingId()
    {
        Random rnd = new Random();
        newBooking.BookingID = rnd.Next(1000, 10000).ToString();
    }

    private void OnShelterSelected(string shelterName)
    {
        GenerateRandomBookingId();
        selectedShelterDescription = shelters.FirstOrDefault(s => s.Navn == shelterName)?.Lang_beskr;
    }

    private async Task HandleValidSubmit()
    {

        // Konverter de midlertidige datoer til string i "yyyy-MM-dd" format
        newBooking.StartDate = tempStartDate.ToString("yyyy-MM-dd");
        newBooking.EndDate = tempEndDate.ToString("yyyy-MM-dd");

        var response = await Http.PostAsJsonAsync("api/bookings", newBooking);
        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/BookingList");
        }
        else
        {
            // Håndter fejl, f.eks. ved at vise en fejlmeddelelse til brugeren
        }
    }
}
